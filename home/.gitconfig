[user]
	name = Beau Gunderson
	email = beau@beaugunderson.com
	username = beaugunderson
[include]
  path = /Users/beau/.config/delta/themes.gitconfig
[core]
	attributesfile = /Users/beau/.gitattributes
	disambiguate = commit
	excludesfile = /Users/beau/.gitignore
	fsmonitor = true
	pager = delta
	untrackedCache = true
	whitespace = trailing-space,space-before-tab,tab-in-indent,tabwidth=2
[init]
	templateDir = ~/.config/git/template/
; [color "branch"]
; 	current = 214 reverse
; 	local = 214
; 	remote = 10
; [color "diff"]
; 	commit = 227 bold
; 	frag = magenta bold
; 	meta = 227
; 	new = green bold
; 	old = red bold
; 	whitespace = red reverse
; [color "diff-highlight"]
; 	newHighlight = green bold 22
; 	newNormal = green bold
; 	oldHighlight = red bold 52
; 	oldNormal = red bold
; [color "status"]
; 	added = 214
; 	changed = 10
; 	untracked = 196
[color]
	branch = auto
	diff = auto
	grep = auto
	interactive = auto
	showbranch = auto
	status = auto
	ui = auto
[diff]
	algorithm = histogram
	colorMoved = default
	renames = copies
	noprefix = true
	renameLimit = 5000
	# wordRegex
[grep]
	lineNumber = true
	extendedRegexp = true
[alias]
	diff = diff -w
	diffr = diff --relative -w
	pick-commit = !git log --pretty=oneline --color=always | fzf --ansi | cut -d ' ' -f1
	# rebase interactive fuzzy
	rif = "!f() { rev=$(git pick-commit); [[ $rev ]] && git rebase -i $rev~; }; f"
	# le: last edited; order branches by the last commit date
	le = for-each-ref --sort=-committerdate --format='%(align:width=32)%(refname:short)%(end) %(committerdate:relative)' refs/heads/
	lg = log --graph --decorate --all --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	ls = ls-files
	# Show files ignored by git:
	ls-ignored = ls-files -o -i --exclude-standard
	# git reauthor $START..$END
	reauthor = !sh -c 'eval `git log --reverse --topo-order --pretty=format:\"git cherry-pick %H && git commit --amend -C %H --author=\\\"%aN <%aE>\\\" && \" $0 `"echo success"'
	update-submodules = submodule foreach git pull --no-rebase origin master
	wdiff = diff --color-words
	find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
	show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
[pull]
	rebase = true
[rebase]
	stat = true
[mergetool "splice"]
	cmd = "nvim -f $BASE $LOCAL $REMOTE $MERGED -c 'SpliceInit'"
	trustExitCode = true
[mergetool "vimdiff3"]
	cmd = nvim -f -d \"$LOCAL\" \"$MERGED\" \"$REMOTE\"
[mergetool "fugitive"]
	cmd = nvim -f -c \"Gdiff\" \"$MERGED\"
[merge]
	conflictStyle = zdiff3
[rerere]
	enable = 1
[url "git@github.com:"]
	insteadOf = git://github.com/
	pushInsteadOf = git://github.com/
	insteadOf = https://beaugunderson@github.com/
	pushInsteadOf = https://beaugunderson@github.com/
	insteadOf = https://github.com/
	pushInsteadOf = https://github.com/
[push]
	default = current
	autoSetupRemote = true
[credential]
	helper = cache
[interactive]
	diffFilter = delta --color-only
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[protocol]
	version = 2
[delta]
	; features = chameleon
	hyperlinks = true
	line-numbers = true
	navigate = true
	side-by-side = true
[commit]
	template = /Users/beau/.stCommitMsg
