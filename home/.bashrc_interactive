export BASH_ENV=$HOME/.bashrc
export EDITOR=vim

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoredups:ignorespace

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTSIZE=1000
export HISTFILESIZE=2000
export HISTIGNORE="&:[bf]g:exit"

export INPUTRC=~/.inputrc
export PAGER="less -r"
export PATH=$PATH:$HOME/.bin:/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin:/usr/local/lib/php:/var/lib/gems/1.9/bin
export PROMPT_COMMAND="history -a"
export SHELL=bash
export SSH_ENV=$HOME/.ssh/environment
export TERM=xterm-256color

# UTF-8 support, fixes Ruby among other things
export LC_CTYPE=en_US.UTF-8
export LANG=en_US.UTF-8

unset LC_ALL

shopt -s checkwinsize
shopt -s cdspell
shopt -s cmdhist
shell_is_linux && shopt -s dirspell
# append to the history file, don't overwrite it
shopt -s histappend
shopt -s no_empty_cmd_completion

# Ignore Ctrl-S, Ctrl-Q
stty -ixon -ixoff

# Ignore Ctrl-D
set -o ignoreeof

# Vi editing mode
set -o vi

function start_agent {
	echo "Initialising new SSH agent..."
	/usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
	echo succeeded
	chmod 600 "${SSH_ENV}"
	. "${SSH_ENV}" > /dev/null
	/usr/bin/ssh-add;
	/usr/bin/ssh-add ~/.ssh/beau-singly;
}

# Source SSH settings, if applicable
if [ -f "${SSH_ENV}" ]; then
	. "${SSH_ENV}" > /dev/null
	ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
		start_agent;
	}
else
	start_agent;
fi

if echo hello|grep --color=auto l >/dev/null 2>&1; then
	export GREP_OPTIONS="--color=auto" GREP_COLOR="1;32"
fi

if [ -f ~/.bash_aliases ]; then
	. ~/.bash_aliases
fi

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator

# Fancy LS_COLORS
shell_is_linux && eval $(dircolors -b $HOME/.dircolors)

# Add some github magic
alias git=hub

alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"

if shell_is_osx
then
	LS_OPTIONS="-G"
else
	LS_OPTIONS='--group-directories-first --color=auto --time-style="+%D %r"'
fi

alias l="ls -hF $LS_OPTIONS"
alias ls="ls -hF $LS_OPTIONS"
alias ll="ls -hlF $LS_OPTIONS"
alias lll="ls -ahlF $LS_OPTIONS"

alias df="df -h"

alias www-permissions="chown -R www-data: . && chmod -R ug+rw ."

alias ..="cd .."
alias ...="cd ../.."

alias cd..="cd .."
alias cd...="cd ../.."

# Selector
source ~/.bin/bash-selector.sh --hist --cd

# Source AWS settings
source ~/.bin/aws.sh

# Source nvm
shell_is_linux && source ~/nvm/nvm.sh

# Source z
source ~/.bin/z.sh

# SSH completion
source ~/.completion/ssh.sh

# Create Prompt
if shell_is_linux
then
	BRACKET="\[\033[0;36m\]"
else
	BRACKET="\[\033[0;32m\]"
fi

WHITE="\[\033[1;37m\]"
RED="\[\033[1;31m\]"
GRAY="\[\033[0;37m\]"
NOTHING="\[\033[0m\]"

if (($SHLVL > 1))
then
	BRACKET="\[\033[0;31m\]"
fi

function git_branch {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

function git_clean {
	git diff --quiet HEAD 2> /dev/null
}

function git_status {
	GIT_BRANCH=$(git_branch)
	COLOR=$RED

	git_clean && COLOR=$WHITE

	if [[ $GIT_BRANCH ]]
	then
		GIT_BRANCH="$GRAY.$BRACKET[$COLOR$GIT_BRANCH$BRACKET]"
	fi

	echo -ne $GIT_BRANCH
}

function _prompt_command {
	PS1="$BRACKET[$WHITE\h$BRACKET]$GRAY.$BRACKET[$WHITE\u$BRACKET]$GRAY.$BRACKET[$WHITE\w$BRACKET]$GRAY.$BRACKET[$WHITE\@$BRACKET]`git_status`$NOTHING "
}

PROMPT_COMMAND=_prompt_command
