export BASH_ENV=$HOME/.bashrc

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTFILE=~/.bash_eternal_history
export HISTFILESIZE=
export HISTIGNORE="&:[bf]g:exit"
export HISTSIZE=
export HISTTIMEFORMAT="[%F %T] "

export INPUTRC=~/.inputrc
export PAGER="less -r"
export EDITOR="vim"

export FIGNORE=$FIGNORE:.pyc:.o

# git wants to use /usr/bin/vim instead of /usr/local/bin/vim on OS X
shell_is_osx && export GIT_EDITOR="/usr/local/bin/vim"

# Hardcode ruby on OS X
shell_is_osx && export PATH=$(brew --prefix ruby)/bin

# Add swift toolchain on OS X
shell_is_osx && PATH=$PATH:./Applications/Xcode6-Beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin

# Add AWS tools
shell_is_osx && \
  PATH=$PATH:~/aws/AWS-ElasticBeanstalk-CLI-2.6.3/eb/macosx/python2.7

# Reset the path
shell_is_linux && export PATH=

export PATH=$PATH:$HOME/.bin:/bin:/usr/local/bin:/usr/bin:/sbin:/usr/sbin
export PATH=$PATH:/usr/local/sbin:/usr/local/lib/php:/var/lib/gems/1.9/bin
export PATH=$PATH:/usr/local/go/bin:/usr/local/heroku/bin:/usr/games

# Hardcode Postgres on OS X
shell_is_osx && export PATH=$PATH:/Applications/Postgres.app/Contents/MacOS/bin

export PROMPT_COMMAND="history -a"
export SHELL=`which bash`
export SSH_ENV=$HOME/.ssh/environment

shell_is_osx && export \
  JAVA_HOME="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home"

export WORKON_HOME=~/.envs

# lolcommits options
export LOLCOMMITS_FORK=true
export LOLCOMMITS_STEALTH=true

# UTF-8 support, fixes Ruby among other things
export LC_CTYPE=en_US.UTF-8
export LANG=en_US.UTF-8

unset LC_ALL

shopt -s checkwinsize
shopt -s cdspell
shopt -s cmdhist
shell_is_linux && shopt -s dirspell
# append to the history file, don't overwrite it
shopt -s histappend
shopt -s no_empty_cmd_completion

# Ignore Ctrl-S, Ctrl-Q
stty -ixon -ixoff

# Ignore Ctrl-D
set -o ignoreeof

# Vi editing mode
set -o vi

function start_agent {
  echo "Initialising new SSH agent..."
  /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
  echo succeeded
  chmod 600 "${SSH_ENV}"
  . "${SSH_ENV}" > /dev/null
  /usr/bin/ssh-add;
  [ -f ~/.ssh/heroku-pgp ] && /usr/bin/ssh-add ~/.ssh/heroku-pgp;
}

# Source SSH settings, if applicable
if [ -f "${SSH_ENV}" ]; then
  . "${SSH_ENV}" > /dev/null
  ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
    start_agent;
  }
else
  start_agent;
fi

if echo hello|grep --color=auto l >/dev/null 2>&1; then
  export GREP_OPTIONS="--color=auto" GREP_COLOR="1;32"
fi

if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && \
  source $HOME/.tmuxinator/scripts/tmuxinator

alias ag=pt

# Add some github magic
alias git=hub

alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"

alias tree="tree -C -I node_modules"
alias treed="tree -C -I node_modules --du --si --sort=size --dirsfirst"

shell_is_linux && alias bower="bower --allow-root"

shell_is_osx && function dash {
  open dash://$1
}

# Fancy LS_COLORS
DIRCOLORS=dircolors

[ ! -z `which gdircolors 2> /dev/null` ] && DIRCOLORS=gdircolors

eval $($DIRCOLORS -b $HOME/.dircolors)

if [ -z `which gls 2> /dev/null` ] && shell_is_osx
then
  LS_OPTIONS="-G"
else
  LS_OPTIONS='--group-directories-first --color=auto --time-style="+%D %r" --quoting-style=shell'
fi

LS=ls

[ ! -z `which gls 2> /dev/null` ] && LS=gls

alias l="$LS -hF $LS_OPTIONS"
alias ls="$LS -hF $LS_OPTIONS"
alias l1="$LS -hF1 $LS_OPTIONS"
alias ll="$LS -hlF $LS_OPTIONS"
alias lrt="$LS -hlFrt $LS_OPTIONS"
alias lx="$LS -hlFX $LS_OPTIONS"
alias lll="$LS -ahlF $LS_OPTIONS"

alias p="projects"

export FZF_DEFAULT_OPTS="--extended --select-1 --sort=2500"

contract-home() {
  sed "s|^$HOME|~|"
}

# cd to a project via fzf
pd() {
  cd $(projects ls -1 | \
    fzf --query="$1" | \
    xargs -I {} projects get --porcelain "{}" directory)
}

# open a project's URL via fzf
po() {
  open $(projects ls -1 | \
    fzf --query="$1" | \
    xargs -I {} projects get --porcelain "{}" homepage)
}

# edit a project file with $EDITOR via fzf
# note: requires gnu find
pe() {
  FILTERS='-type f '

  # filter out .git and node_modules with -prune to make the find much faster
  FILTERS+='-not -path \*/.git/\* -prune '
  FILTERS+='-not -path \*/node_modules/\* -prune '

  ADDITIONAL_FILTERS=$1

  if PROJECT_DIRECTORY=`projects resolve --relative .`; then
    FILE=$(bash -c "find $PROJECT_DIRECTORY \
      $FILTERS $ADDITIONAL_FILTERS 2> /dev/null" | \
        ignore-pipe | contract-home | fzf)
  else
    FILE=$(projects glob --expand | \
      xargs -I {} bash -c "find "{}" \
        $FILTERS $ADDITIONAL_FILTERS 2> /dev/null" | \
         ignore-pipe | contract-home | fzf)
  fi

  # bash -c needed to handle tilde expansion
  [ ! -z "$FILE" ] && bash -c "${EDITOR:-vim} "$FILE""
}

# edit a project file modified within in the last 7 days
per() {
  pe "-mtime -7"
}

alias gs="git status"
alias gd="git diff -w"

alias df="df -h"

alias www-permissions="chown -R www-data: . && chmod -R ug+rw ."

alias ..="cd .."
alias ...="cd ../.."

alias cd..="cd .."
alias cd...="cd ../.."

# Source AWS settings
source ~/.bin/aws.sh

# shell_is_osx && source /etc/bash_completion.d/git-prompt

# Source bash completion
shell_is_osx && \
  [ -f `brew --prefix`/etc/bash_completion ] && \
    source `brew --prefix`/etc/bash_completion

shell_is_linux && \
  [ -f /usr/share/bash-completion/bash_completion ] && \
    source /usr/share/bash-completion/bash_completion

# Source fuzzy finder completions
source ~/.fzf.bash

# Source brew completion
shell_is_osx && \
  source `brew --repository`/Library/Contributions/brew_bash_completion.sh

# Source SSH completion
# TODO: Get this for free if moved to ~/.bash_completion/ssh.sh
source ~/.completion/ssh.sh

# Source npm completion
eval "$(npm completion -)"

# Source fuzzy finder completions
source ~/.fzf.bash

# Source virtualenvwrapper.sh if it exists
[ -f /usr/local/bin/virtualenvwrapper.sh ] && \
  source /usr/local/bin/virtualenvwrapper.sh

# Source host-specific options
[ -f ~/.hosts/$HOSTNAME.sh ] && source ~/.hosts/$HOSTNAME.sh

# Create Prompt
if shell_is_linux
then
  BOX_COLOR="\[\e[0;36m\]"
else
  BOX_COLOR="\[\e[0;32m\]"
fi

WHITE="\[\e[1;37m\]"
RED="\[\e[1;31m\]"
GRAY="\[\e[38;05;239m\]"
LIGHT_GRAY="\[\e[38;05;235m\]"
MEDIUM_GRAY="\[\e[38;05;244m\]"
GREEN="\[\e[38;05;34m\]"
YELLOW="\[\e[38;05;172m\]"
NOTHING="\[\e[0m\]"

# If I use literal Unicode characters then it wedges bash on OS X
BOX=`echo -e "\xE2\x97\xBC"`
SLASH="/"

if (($SHLVL > 1))
then
  BOX_COLOR=$MEDIUM_GRAY
fi

function git_branch {
  command git branch --no-color 2> /dev/null | \
    sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

function git_clean {
  command git diff --quiet HEAD 2> /dev/null
}

function git_status {
  GIT_BRANCH=$(git_branch)
  COLOR=$RED

  if [[ $GIT_BRANCH ]]
  then
    git_clean && COLOR=$GREEN
    GIT_BRANCH=" $COLOR$GIT_BRANCH"
  fi

  echo -e "$GIT_BRANCH"
}

function virtualenv_status {
  if [[ $VIRTUAL_ENV ]]
  then
    echo -e " $YELLOW`basename $VIRTUAL_ENV`"
  fi
}

function _prompt_command {
  # Save history after each command
  history -a

  PS1="$BOX_COLOR$BOX$GRAY \h$LIGHT_GRAY$SLASH$GRAY\u`virtualenv_status`"
  PS1="$PS1 $MEDIUM_GRAY\w`git_status`$NOTHING "
}

PROMPT_COMMAND=_prompt_command
